{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","className","style","id","type","Navbar","props","mode","href","title","to","onClick","toggleMode","role","htmlFor","TextForm","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","newtext","split","join","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","trim","filter","element","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","body","path","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c0556994.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setmyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  // const [btntext, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n  // const toggleStyle = () => {\r\n  //   if (myStyle.color === \"black\") {\r\n  //     setmyStyle({\r\n  //       color: \"white\",\r\n  //       backgroundColor: \"black\",\r\n  //       border: \"1px solid white\",\r\n  //     });\r\n  //     setBtnText(\"Enable Light Mode\");\r\n  //   } else {\r\n  //     setmyStyle({\r\n  //       color: \"black\",\r\n  //       backgroundColor: \"white\",\r\n  //     });\r\n  //     setBtnText(\"Enable Dark Mode\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Analyze Your text\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Textutils gives you a way to analyze your text quickly and\r\n              efficiently. Be it word count, character count or reading time\r\n              etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Free To Use\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUtils is a free character counter tool that provides instant\r\n              character count & word count statistics for a given text.\r\n              TextUtils reports the number of words and characters. Thus it is\r\n              suitable for writing text with word/ character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Browser Compatible\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This Textutils software works in any web browsers such as Chrome,\r\n              Firefox, Internet Explorer, Safari, Opera. It suits to count\r\n              characters in facebook, blog, books, excel document, pdf document,\r\n              essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired };\r\nNavbar.defaultProps = { title: \"Default Title\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newtext = text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"));\r\n    props.showAlert(\"Extra spaces Removed!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"OnChange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"#042743\" : \"white\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n              color: props.mode === \"light\" ? \"#042743\" : \"white\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleClear}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"light\" ? \"#042743\" : \"white\" }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {\r\n            text\r\n              .trim()\r\n              .split(/\\s+/)\r\n              .filter(function (element) {\r\n                return element !== \"\";\r\n              }).length\r\n          }{\" \"}\r\n          words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox above to preview it here \"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Textform\n          mode={mode}\n          showAlert={showAlert}\n          heading=\"Enter The Text To Analyze Below\"\n        /> */}\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <Textform\n                  mode={mode}\n                  showAlert={showAlert}\n                  heading=\"Enter The Text To Analyze Below\"\n                />\n              }\n            />\n            <Route path=\"about/*\" element={<About />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}